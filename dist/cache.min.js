(() => {
  "use strict";
  var e = {
    746: (e, t, n) => {
      function r(e, t) {
        for (var n = 0; n < t.length; n++) {
          var r = t[n];
          r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
        }
      }

      e = n.hmd(e);
      let a = function () {
        function e(t = {}) {
          !function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
          }(this, e), e.config = { ...e.config, ...t }, setInterval(e.cleanup, 1e3 * e.config.cleanup)
        }

        var t, n;
        return t = e, n = [{
          key: "create", value: function (t) {
            return new e(t)
          }
        }, {
          key: "set", value: function (e, t, n = this.config.ttl) {
            this.data[e] = { expire: 0 === n ? 0 : Date.now() + 1e3 * n, value: t }
          }
        }, {
          key: "get", value: function (e, t = null) {
            return this.has(e) ? this.data[e].value : t
          }
        }, {
          key: "has", value: function (e) {
            var t;
            const n = null === (t = this.data) || void 0 === t ? void 0 : t[e];
            return !(!n || this.isExpired(n.expire))
          }
        }, {
          key: "remove", value: function (e) {
            delete this.data[e]
          }
        }, {
          key: "removeAll", value: function () {
            this.data = {}
          }
        }, {
          key: "isExpired", value: function (e) {
            return 0 !== e && e < Date.now()
          }
        }, {
          key: "cleanup", value: function () {
            for (const [t, n] of Object.entries(e.data)) e.isExpired(n.expire) && e.remove(t)
          }
        }], null && r(t.prototype, null), n && r(t, n), e
      }();
      a.config = { ttl: 600, cleanup: 3600 }, a.data = {}, e.exports = a
    }
  }, t = {};

  function n(r) {
    var a = t[r];
    if (void 0 !== a) return a.exports;
    var o = t[r] = { id: r, loaded: !1, exports: {} };
    return e[r](o, o.exports, n), o.loaded = !0, o.exports
  }

  n.hmd = e => ((e = Object.create(e)).children || (e.children = []), Object.defineProperty(e, "exports", {
    enumerable: !0,
    set: () => {
      throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: " + e.id)
    }
  }), e), n(746)
})();
